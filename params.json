{"name":"SimpleRock","tagline":"A Chef recipe that builds an open source version of MOCYBER's ROCK (Response Operation Collection Kit) platform. ","body":"## Response Operation Collections Kit Reference Build\r\n\r\nThis build was created and tested using CentOS 7.2. I pretty much guarantee that it won't work with anything else other than RHEL 7.  Unless you have an operational need, I would suggest basing your system off of CentOS 7.2 (build 1511), as that is where the bulk of the testing of this has happened.\r\n\r\n**BE ADVISED:**  This build process takes 3-10 minutes depending on your underlying hardware.  There will be times where it seems like it quit.  Be patient.  You'll know when it's done, for better or worse.\r\n\r\n### Vagrant\r\n**NOTE:**   \r\nThis Vagrantfile is configured to give the VM 8GB of RAM.  If your system can't do that you should buy a new system or adjust the `vm.memory` value.  Anything below 4 is going to run like poopoo.\r\n``` \r\ngit clone https://github.com/CyberAnalyticDevTeam/SimpleRock.git\r\ncd SimpleRock\r\nvagrant up\r\n```\r\n\r\n### Physical/Virtual/Non-Vagrant\r\n**NOTE:**   \r\nThe system you run this on should have at least 2 network interfaces and more than 4GB of RAM, with an OS (RHEL or CentOS 7) already installed.\r\n```\r\nsudo rpm -Uvh https://bintray.com/artifact/download/cyberdev/capes/chef-12.3.0-1.el6.x86_64.rpm\r\nsudo yum install git -y\r\ngit clone https://github.com/CyberAnalyticDevTeam/SimpleRock.git\r\ncd SimpleRock\r\nsudo chef-client -z -r \"recipe[simplerock]\"\r\n```\r\n\r\n## Minimum Hardware Recommendations \r\n#### (For anything other than a Vagrant build)\r\n\r\n**NOTE:** This is a shadow of a recommendation of a guideline.  Your mileage may vary.  No returns or refunds.\r\n\r\n*  CPU\r\n  *  4 or more physical cores.  \r\n*  Memory\r\n  *  16GB (You can get away with 8GB, but it won't collect for long.)\r\n*  Storage\r\n  *  256GB, with 200+ of that dedicated to `/data`. Honestly, throw everything you can at it.  The higher the IOPS the better.\r\n*  Network\r\n  *  The system needs at least 2 network interfaces, one for management and one for collection.\r\n\r\n\r\n**GOLDEN RULE:** If you throw hardware at it, ROCK will use it.  It will require some tuning to do so, but we'll be documenting that soon enough.\r\n\r\n## Usage\r\n\r\n#### Start / Stop / Status\r\nAccomplished with `rock_stop`, `rock_start`, and `rock_status`.\r\n\r\n\r\n`rock_stop`\r\n```\r\n[root@simplerockbuild ~]# rock_stop\r\nStopping Bro...\r\nstopping worker-1-1 ...\r\nstopping worker-1-2 ...\r\nstopping proxy-1 ...\r\nstopping manager ...\r\nStopping Logstash...\r\nStopping Kibana...\r\nStopping Elasticsearch...\r\nStopping Kafka...\r\nStopping Zookeeper...\r\n```\r\n\r\n`rock_start`\r\n```\r\n[root@simplerockbuild ~]# rock_start\r\nStarting Zookeeper...\r\n   Active: active (running) since Wed 2015-12-02 17:12:02 UTC; 5s ago\r\nStarting Elasticsearch...\r\n   Active: active (running) since Wed 2015-12-02 17:12:07 UTC; 5s ago\r\nStarting Kafka...\r\n   Active: active (running) since Wed 2015-12-02 17:12:12 UTC; 5s ago\r\nStarting Logstash...\r\n   Active: active (running) since Wed 2015-12-02 17:12:17 UTC; 5s ago\r\nStarting Kibana...\r\n   Active: active (running) since Wed 2015-12-02 17:12:22 UTC; 5s ago\r\nStarting Bro...\r\nremoving old policies in /data/bro/spool/installed-scripts-do-not-touch/site ...\r\nremoving old policies in /data/bro/spool/installed-scripts-do-not-touch/auto ...\r\ncreating policy directories ...\r\ninstalling site policies ...\r\ngenerating cluster-layout.bro ...\r\ngenerating local-networks.bro ...\r\ngenerating broctl-config.bro ...\r\ngenerating broctl-config.sh ...\r\nupdating nodes ...\r\nmanager scripts are ok.\r\nproxy-1 scripts are ok.\r\nworker-1-1 scripts are ok.\r\nworker-1-2 scripts are ok.\r\nstarting manager ...\r\nstarting proxy-1 ...\r\nstarting worker-1-1 ...\r\nstarting worker-1-2 ...\r\nGetting process status ...\r\nGetting peer status ...\r\nName         Type    Host             Status    Pid    Peers  Started\r\nmanager      manager localhost        running   20389  ???    02 Dec 17:12:34\r\nproxy-1      proxy   localhost        running   20438  ???    02 Dec 17:12:35\r\nworker-1-1   worker  localhost        running   20484  ???    02 Dec 17:12:36\r\nworker-1-2   worker  localhost        running   20485  ???    02 Dec 17:12:36\r\n```\r\n\r\n`rock_status`\r\n```\r\n[root@simplerockbuild ~]# rock_status\r\nZookeeper...\r\n   Active: active (running) since Wed 2015-12-02 17:12:02 UTC; 2min 7s ago\r\nElasticsearch...\r\n   Active: active (running) since Wed 2015-12-02 17:12:07 UTC; 2min 2s ago\r\nKafka...\r\n   Active: active (running) since Wed 2015-12-02 17:12:12 UTC; 1min 57s ago\r\nLogstash...\r\n   Active: active (running) since Wed 2015-12-02 17:12:17 UTC; 1min 52s ago\r\nKibana...\r\n   Active: active (running) since Wed 2015-12-02 17:12:22 UTC; 1min 47s ago\r\nBro...\r\nGetting process status ...\r\nGetting peer status ...\r\nName         Type    Host             Status    Pid    Peers  Started\r\nmanager      manager localhost        running   20389  ???    02 Dec 17:12:34\r\nproxy-1      proxy   localhost        running   20438  ???    02 Dec 17:12:35\r\nworker-1-1   worker  localhost        running   20484  ???    02 Dec 17:12:36\r\nworker-1-2   worker  localhost        running   20485  ???    02 Dec 17:12:36\r\nStenographer...\r\n   Active: active (running) since Wed 2015-12-02 17:12:22 UTC; 1min 47s ago\r\n```\r\n\r\n## Basic Troubleshooting\r\n    \r\n#### Functions Check:\r\n```\r\n# After the initial build, the ES cluster will be yellow because the marvel index will think it's missing a replica.  Run this to fix this issue.  This job will run from cron just after midnight every day.\r\n/usr/local/bin/es_cleanup.sh\r\n\r\n# Check to see that the ES cluster says it's green:\r\ncurl -s localhost:9200/_cluster/health | jq '.'\r\n\r\n# See how many documents are in the indexes.  The count should be non-zero.\r\ncurl -s localhost:9200/_all/_count | jq '.'\r\n\r\n# You can fire some traffic across the sensor at this point to see if it's collecting.\r\ntcpreplay -i [your monitor interface] /path/to/a/test.pcap\r\n\r\n# After replaying some traffic, or just waiting a bit, the count should be going up.\r\ncurl -s localhost:9200/_all/_count | jq '.'\r\n\r\n# You should have plain text bro logs showing up in /data/bro/logs/current/:\r\nls -ltr /data/bro/logs/current/\r\n\r\n# Kafkacat is your kafka swiss army knife.  This command will consume the current queue.  You should see a non-zero offset.\r\nkafkacat -C -b localhost -t bro_raw -e | wc -l\r\n\r\n# If you haven't loaded kibana already, it should be running on port 5601.  This just verifies while you're still on the command line.\r\nnetstat -planet | grep node\r\n```\r\n\r\n## Key web interfaces:\r\n    \r\nIPADDRESS = The management interface of the box, or \"localhost\" if you did the vagrant build.\r\n\r\nhttp://IPADDRESS:5601 - Kibana\r\n\r\nhttp://IPADDRESS:9200/_plugin/marvel - Marvel (To watch the health of elasticsearch.)\r\n\r\nhttp://IPADDRESS:9200/_plugin/sql - Query your ES data with SQL.\r\n\r\n## Full Packet Capture\r\n   \r\nGoogle's Stenographer is installed and configured in this build.  However, it is disabled by default.  There are a few reasons for this: First, it can be too much for Vagrant builds on meager hardware.  Second, you really need to make sure you've mounted /data over sufficient storage before you start saving full packets.  Once you're ready to get nuts, enable and start the service with `systemctl enable stenographer.service` and then `systemctl start stenographer.service`.  Stenographer is already stubbed into the `/usr/local/bin/rock_{start,stop,status}` scripts, you just need to uncomment it if you're going to use it. \r\n\r\n## THANKS\r\n   \r\nThis architecture is made possible by the efforts of the Missouri National Guard Cyber Team, and especially Critical Stack and BroEZ for donating talent and resources to further development.\r\n\r\n\r\n## Approach\r\n   \r\nThe Chef recipe that drives this build strives not to use external recipes and cookbooks where possible.  The reasoning behind this is to make the simplerock recipe a \"one-stop\" reference for a manual build.  This allows users to use the build process as a guide when doing larger scale production roll outs without having to decypher a labrynth of dependencies.\r\n\r\nTemplated config files have comment sections added near key config items with useful info.  They don't all have it, but they get added as remembered.\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}